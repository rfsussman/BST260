low_rates = murders[murders$murder_rate < 1,]
low_rates[which.max(low_rates$population), "state"]
high_pop = murders[murders$population > 10^6,]
high_pop[which.min(murders$murder_rate),]
high_pop
high_pop = murders[murders$population > 10^6,]
high_pop[which.min(high_pop$murder_rate),]
table(murders$region)
?match
murders[murders$region == "West", murder_rate]
u
murders[murders$region == "West", "murder_rate"]
mean(murders[murders$region == "West", "murder_rate"])
table(murders$region)
mean(murders[murders$region == "Northeast", "murder_rate"])
mean(murders[murders$region == "South", "murder_rate"])
mean(murders[murders$region == "North Central", "murder_rate"])
mean(murders[murders$region == "West", "murder_rate"])
length(seq(6, 55, by = 4/7))
seq(6, 55, by = 4/7)
temp <- c(35, 88, 42, 84, 81, 30)
city <- c("Beijing", "Lagos", "Paris", "Rio de Janeiro",
"San Juan", "Toronto")
city_temps <- data.frame(name = city, temperature = temp)
city_temps$temp_C = city_temps/33.8
city_temps$temp_C = city_temps$temp/33.8
city_temps
$$
n = 100
n = 3
1/(1:n)^2
1/9
sum = function(n){
return(1/(1:n)^2)
}
sum(100)
sum = function(n){
return(sum(1/(1:n)^2))
}
sum(100)
rm(sum
)
?sum
sum_invSquares = function(n){
return(sum(1/(1:n)^2))
}
sum_invSquares(100)
3.14^2
9.8596/6
mean(murders[murders$region == "Northeast", "murder_rate"])
mean(murders[murders$region == "South", "murder_rate"])
mean(murders[murders$region == "North Central", "murder_rate"])
mean(murders[murders$region == "West", "murder_rate"])
sum(murders[murders$region == "Northeast", "total"])
sum(murders[murders$region == "Northeast", "total"])/sum(murders[murders$region == "Northeast", "population"])
sum(murders[murders$region == "Northeast", "total"])/sum(murders[murders$region == "Northeast", "population"])*10^5
state.abb
which(state.abb %in% murders$abb)
state.abb
which(c("MA", "ME", "MI", "MO", "MU") %in% state.abb)
c("MA", "ME", "MI", "MO", "MU")[which(c("MA", "ME", "MI", "MO", "MU") %in% state.abb)]
c("MA", "ME", "MI", "MO", "MU")[!which(c("MA", "ME", "MI", "MO", "MU") %in% state.abb)]
c("MA", "ME", "MI", "MO", "MU")[!which(c("MA", "ME", "MI", "MO", "MU") %in% state.abb)]
!which(c("MA", "ME", "MI", "MO", "MU") %in% state.abb)
c("MA", "ME", "MI", "MO", "MU") %in% state.abb)
c("MA", "ME", "MI", "MO", "MU") %in% state.abb
c("MA", "ME", "MI", "MO", "MU")[which(!c("MA", "ME", "MI", "MO", "MU") %in% state.abb)]
murders$state == "New York"
which(murders$state == "New York")
murders[c(which(murders$state == "New York"),
which(murders$state == "California"),
which(murders$state == "Texas"))]
murders[c(which(murders$state == "New York"),
which(murders$state == "California"),
which(murders$state == "Texas")),]
high_pop = murders[murders$population > 10^6,]
high_pop[which.min(high_pop$murder_rate),]
10^6
1000000
high_pop = murders[murders$population > 10^7,]
high_pop[which.min(high_pop$murder_rate),]
inds = split(1:nrow(murders), murders$region)
inds
sapply(inds, function(sum(murders$total) / sum(murders$population)))
sapply(inds, function(ind) sum(murders$total[ind]) / sum(murders$population[ind])*10^5))
sapply(inds, function(ind){sum(murders$total[ind]) / sum(murders$population[ind])*10^5}))
sapply(inds, function(ind){sum(murders$total[ind]) / sum(murders$population[ind])*10^5})))
sapply(inds, function(ind){sum(murders$total[ind]) / sum(murders$population[ind])*10^5})
#| message: false
library(tidyverse)
library(dslabs)
tidy_data <- gapminder |>
filter(country %in% c("South Korea", "Germany") & !is.na(fertility)) |>
select(country, year, fertility)
head(tidy_data, 6)
```{r, echo=FALSE, message=FALSE}
path <- system.file("extdata", package = "dslabs")
filename <- file.path(path, "fertility-two-countries-example.csv")
wide_data <- read_csv(filename)
wide_data <- read_csv(filename)
select(wide_data, country, `1960`:`1970`) |> as.data.frame()
murders <- mutate(murders, rate = total/population*100000)
#| message: false
library(tidyverse)
library(dslabs)
tidy_data <- gapminder |>
filter(country %in% c("South Korea", "Germany") & !is.na(fertility)) |>
select(country, year, fertility)
head(tidy_data, 6)
path <- system.file("extdata", package = "dslabs")
filename <- file.path(path, "fertility-two-countries-example.csv")
wide_data <- read_csv(filename)
select(wide_data, country, `1960`:`1970`) |> as.data.frame()
murders <- mutate(murders, rate = total/population*100000)
filter(murders, rate <= 0.71)
new_table <- select(murders, state, region, rate)
filter(new_table, rate <= 0.71)
murders |> select(state, region, rate) |> filter(rate <= 0.71)
16 |> sqrt() |> log(base = 2)
murders |> summarize(avg = mean(rate))
murders |> summarize(rate = sum(total)/sum(population)*100000)
murders |> summarize(median = median(population), min = min(population), max = max(population))
murders |> summarize(quantiles = quantile(population, c(0.5, 0, 1)))
murders |> reframe(quantiles = quantile(population, c(0.5, 0, 1)))
median_min_max <- function(x){
qs <- quantile(x, c(0.5, 0, 1))
data.frame(median = qs[1], min = qs[2], max = qs[3])
}
murders |> summarize(median_min_max(population))
murders |> group_by(region)
murders |> group_by(region) |> summarize(rate = sum(total) / sum(population) * 100000)
murders |> group_by(region) |> summarize(median_min_max(population))
murders |> group_by(region) |>
mutate(region_pop = sum(population), n = n()) |>
ungroup()
murders |>
summarize(rate = sum(total)/sum(population)*100000) |>
class()
murders |>
summarize(rate = sum(total)/sum(population)*100000) |>
pull(rate)
murders |> arrange(rate) |> head()
murders |> arrange(desc(rate)) |> head()
murders |> arrange(region, desc(rate)) |> head(11)
head(murders)
murders %>% filter(murder_rate < 1)
murders %>% filter(murder_rate < 1, region == "West")
murders %>% filter(murder_rate < 1) %>% arrange(population)
murders %>% filter(murder_rate < 1) %>% arrange(desc(population)) %>% pull(state)
murders %>% filter(murder_rate < 1) %>% arrange(desc(population)) %>% pull(state) %>% .[1]
murders %>% filter(population >= 10^7) %>% arrange(population) %>% pull(state) %>% .[1]
murders %>% filter(population >= 10^7) %>% arrange(population)
murders %>% filter(population >= 10^7) %>% arrange(murder_rate)
murders %>% filter(population >= 10^7) %>% arrange(murder_rate) %>% pull(state) %>% .[1]
murders %>% group_by(region) %>% summarise(rate = sum(total)/sum(population)*10^5)
library(NHANES)
identical(NHANES$Race1, NHANES$Race3)
NHANES$Race1 == NHANES$Race3
NHANES$Race3
library(NHANES)
head(NHANES)
as.character(NHANES$Race1) == as.character(NHANES$Race3)
which(as.character(NHANES$Race1) == as.character(NHANES$Race3))
View(NHANES %>% select(Race1, Race3))
NHANES$Race1 == NHANES$Race3
factor( NHANES$Race3)
factor(NHANES$Race1)
?case_when
NHANES %>% mutate(race = case_when(is.na(Race1) ~ Race3,
is.na(Race3) ~ Race1,
.default = Race1))
NHANES = NHANES %>% mutate(race = case_when(is.na(Race1) ~ Race3,
is.na(Race3) ~ Race1,
.default = Race1))
View(NHANES %>% select(matches(ace)))
View(NHANES %>% select(matches("ace")))
NHANES = NHANES %>% mutate(race = case_when(is.na(Race1) ~ Race3,
is.na(Race3) ~ Race1,
Race1 == "Other" ~ Race3,
.default = Race1))
View(NHANES %>% select(matches("ace")))
?NHANES
head(NHANES
)
NHANES %>% group_by(race, Gender) %>%
summarise(n = n(), smoke = mean(SmokeNow, na.rm = TRUE)) %>%
arrange(n())
NHANES %>% group_by(race, Gender) %>%
summarise(n = n(), smoke = mean(SmokeNow, na.rm = TRUE)) %>%
arrange(n)
table(NHANES$SmokeNow)
NHANES %>% group_by(race, Gender) %>%
summarise(n = n(), smoke = sum(SmokeNow == "Yes", na.rm = TRUE)) %>%
arrange(n)
NHANES %>% group_by(race, Gender) %>%
summarise(n = n(), smoke = mean(SmokeNow == "Yes", na.rm = TRUE)) %>%
arrange(n)
murders %>% filter(murder_rate < 1) %>% slice_max(population)
table(NHANES$race)
?forcats::fct_collapse
NHANES_new = NHANES %>% mutate(race = forcats::fct_collapse(Hispanic = c("Mexican", "Hispanic"), NA = "Other"))
NHANES_new = NHANES %>% mutate(race = forcats::fct_collapse(Hispanic = c("Mexican", "Hispanic"),missing = "Other"))
NHANES_new = NHANES %>% mutate(race_edited = forcats::fct_collapse(race, Hispanic = c("Mexican", "Hispanic"),missing = "Other"))
fct_count(NHANES_new$race)
fct_count(NHANES_new$race_edited)
NHANES %>% filter(!is.na(Race1) & !is.na(Race3)) %>% filter(as.character(Race1) != as.character(Race2)) %>% count()
NHANES %>% filter(!is.na(Race1) & !is.na(Race3)) %>% filter(as.character(Race1) != as.character(Race3)) %>% count()
NHANES %>% filter(!is.na(Race1) & !is.na(Race3)) %>% filter(as.character(Race1) != as.character(Race3)) %>% count(Race1, Race3)
NHANES_new %>%
group_by(race_edited, Gender) %>%
summarise(n = n(), smoke = mean(SmokeNow == "Yes", na.rm = TRUE)) %>%
arrange(smoke)
NHANES_new %>% group_by(race_edited, Gender) %>% summarise(med_age = median(Age, na.rm = TRUE))
NHANES_new %>% group_by(race_edited, Gender) %>% summarise(med_age = median(Age, na.rm = TRUE)) %>% arrange(med_Age)
NHANES_new %>% group_by(race_edited, Gender) %>% summarise(med_age = median(Age, na.rm = TRUE)) %>% arrange(med_age)
table(NHANES_new$race_edited)
?NHANES
NHANES_new %>%
group_by(AgeDecade) %>%
mutate(n_age = n(AgeDecade))
NHANES_new %>%
group_by(AgeDecade) %>%
mutate(n_age = n())
View(NHANES_new %>%
group_by(AgeDecade) %>%
mutate(n_age = n()))
test = NHANES_new %>%
group_by(AgeDecade) %>%
mutate(n_age = n())
View(test %>% select(AgeDecade, n_age))
NHANES_new %>%
group_by(AgeDecade) %>%
mutate(n_age = n()) %>%
filter(n_age < 10) %>%
ungroup() %>%
group_by(AgeDecade, gender) %>%
summarise(smoke_pct = mean(SmokeNow == "Yes", na.rm = TRUE)) %>%
arrange(med_age)
NHANES_new %>%
group_by(AgeDecade) %>%
mutate(n_age = n()) %>%
filter(n_age < 10) %>%
ungroup() %>%
group_by(AgeDecade, Gender) %>%
summarise(smoke_pct = mean(SmokeNow == "Yes", na.rm = TRUE)) %>%
arrange(med_age)
NHANES_new %>%
filter(!is.na(AgeDecade)) %>%
group_by(AgeDecade) %>%
mutate(n_age = n()) %>%
filter(n_age < 10) %>%
ungroup() %>%
group_by(AgeDecade, Gender) %>%
summarise(smoke_pct = mean(SmokeNow == "Yes", na.rm = TRUE)) %>%
arrange(smoke_pct)
NHANES$SmokeNow
NHANES_new %>%
filter(!is.na(AgeDecade)) %>%
group_by(AgeDecade) %>%
mutate(n_age = n()) %>%
filter(n_age < 10) %>%
ungroup() %>%
group_by(AgeDecade, Gender)
NHANES_new %>%
filter(!is.na(AgeDecade)) %>%
group_by(AgeDecade) %>%
mutate(n_age = n()) %>%
filter(n_age > 10) %>%
ungroup() %>%
group_by(AgeDecade, Gender) %>%
summarise(smoke_pct = mean(SmokeNow == "Yes", na.rm = TRUE)*100) %>%
arrange(smoke_pct)
for(k in 12:20){ print(choose(20, k)*(1/3)^k*(2/3)^(20-k))}
x = 0
for(k in 12:20){ x = x + (choose(20, k)*(1/3)^k*(2/3)^(20-k))}
x
choose(5, 3)*0.4^3*0.6^2
choose(7, 4)*0.4^4*0.6^3
for(k in 12:20){ x = x + (choose(20, k)*(1/2)^k*(1/2)^(20-k))}
x
x = 0
for(k in 12:20){ x = x + (choose(20, k)*(1/2)^k*(1/2)^(20-k))}
x
choose(100*52*20, 0)*1*(1-(1.3*10^-8))^(100*52*20)
1-(1.3*10^-8)
(1.3*10^-8))^(100*52*20)
(1.3*10^-8)^(100*52*20)
choose(100*52*20, 0)
choose(100*52*20, 0)*1*(1-(1.3*10^-8))^(100*52*20)
(1-(1.3*10^-8))
100*52*20
choose(100*52*20, 2)*(1.3*10^-8)^2*1*(1-(1.3*10^-8))^(100*52*20)
(4.5/4)*(4.5/3)*(4.5/2)*4.5*e^-(4.5)
(4.5/4)*(4.5/3)*(4.5/2)*4.5*exp(-4.5)
(4.5/4)*(4.5/3)*(4.5/2)*4.5*exp(-4.5) + (4.5/3)*(4.5/2)*4.5*exp(-4.5) + (4.5/2)*4.5*exp(-4.5) + 4.5*exp(-4.5) + exp(-4.5)
exp(-1/30)*(1/30)^10
exp(-2)*
2
exp(-1/3)*1/3
exp(-1/3)
1-exp(-1/3)
2/60/10
1/30
ln(0.5)
log(0.5, base = 2)*30
log(0.5, base = e)*30
log(0.5, base = 2.71)*30
e
log(0.5)*39
log(0.5)*30
exp(-3)
exp(0)
x = seq(0, 1, by = 0.01)
plot(x, 1-exp(-2*x^3))
exp(-100000)
pi*tan(0.4)
?tan
0.42279321*pi
tan(0.4*pi)
0.0002
0.00002
# run model
model2 = lm(tc ~ age + I(age^2), df)
# import packages
library(tidyverse)
library(broom)
library(lme4)
library(lmerTest)
# import data
df = read_csv("SCCS2_v12.csv")[,-1]
females = df %>% filter(gender == 1)
males = df %>% filter(gender == 0)
# run model
model1 = lm(tc ~ age, df)
# summarise model
tidy(model1, conf.int = TRUE)
# run correlation
cor.test(df$age, df$tc)
# residual vs. fitted plot
plot(fitted(model1), model1$residuals, main = NULL)
title(main = "Residual vs. fitted plot")
lines(lowess(fitted(model1), model1$residuals), col='red')
# q-q plot
qqnorm(model1$residuals, main = NULL)
qqline(model1$residuals, main = NULL)
title(main = "Q-Q plot")
# density plot
plot(density(model1$residuals), main = "Density plot")
ggplot(df, aes(age, tc)) +
theme_bw() +
geom_point() +
geom_smooth(method = "loess")
# run model
model2 = lm(tc ~ age + I(age^2), df)
# summarise model
tidy(model2, conf.int = TRUE)
# run t-test
t.test(df$tc[df$gender == 1], df$tc[df$gender == 0], alternative = "two.sided", var.equal = TRUE)
# run model
model3 = lm(tc ~ as.factor(gender), df)
# summarise model
tidy(model3, conf.int = TRUE)
# run model
model4 = lm(tc ~ age + I(age^2) + as.factor(gender), df)
# summarise model
tidy(model4, conf.int = TRUE)
model4
summary(model4)
View(model4)
View(summary(model4))
summary(model4)[["sigma"]]
summary(model1)[["sigma"]]
round((summary(model1)[["sigma"]]), 3)
round((summary(model1)[["sigma"]])
)
# import packages
library(tidyverse)
library(broom)
library(lme4)
library(lmerTest)
# import data
df = read_csv("SCCS2_v12.csv")[,-1]
females = df %>% filter(gender == 1)
males = df %>% filter(gender == 0)
# run model
model1 = lm(tc ~ age, df)
# summarise model
tidy(model1, conf.int = TRUE)
# run correlation
cor.test(df$age, df$tc)
# residual vs. fitted plot
plot(fitted(model1), model1$residuals, main = NULL)
title(main = "Residual vs. fitted plot")
lines(lowess(fitted(model1), model1$residuals), col='red')
# q-q plot
qqnorm(model1$residuals, main = NULL)
qqline(model1$residuals, main = NULL)
title(main = "Q-Q plot")
# density plot
plot(density(model1$residuals), main = "Density plot")
ggplot(df, aes(age, tc)) +
theme_bw() +
geom_point() +
geom_smooth(method = "loess")
# run model
model2 = lm(tc ~ age + I(age^2), df)
# summarise model
tidy(model2, conf.int = TRUE)
# run t-test
t.test(df$tc[df$gender == 1], df$tc[df$gender == 0], alternative = "two.sided", var.equal = TRUE)
# run model
model3 = lm(tc ~ as.factor(gender), df)
# summarise model
tidy(model3, conf.int = TRUE)
# run model
model4 = lm(tc ~ age + I(age^2) + as.factor(gender), df)
# summarise model
tidy(model4, conf.int = TRUE)
ggplot(df, aes(age, tc)) +
theme_bw() +
geom_point() +
geom_line(mapping = aes(y = predict(model4), color = factor(gender)), linewidth = 1.5) +
scale_color_manual(values = c("blue", "red")) +
labs(color = "Gender")
# run model
model5 = lm(tc ~ age + I(age^2) + as.factor(gender) + age:as.factor(gender) + I(age^2):as.factor(gender), df)
# summarise model
tidy(model5, conf.int = TRUE)
ggplot(df, aes(age, tc)) +
theme_bw() +
geom_point() +
geom_line(mapping = aes(y = predict(model5), color = factor(gender)), linewidth = 1.5) +
scale_color_manual(values = c("blue", "red")) +
labs(color = "Gender")
# run model
model2_f = lm(tc ~ age + I(age^2), females)
# summarise model
tidy(model2_f, conf.int = TRUE)
# run model
model2_m = lm(tc ~ age + I(age^2), males)
# summarise model
tidy(model2_m, conf.int = TRUE)
ggplot(df, aes(age, tc)) +
theme_bw() +
geom_point() +
geom_line(data = females, mapping = aes(y = predict(model2_f)), color = "red", linewidth = 1.5) +
geom_line(data = males, mapping = aes(y = predict(model2_m)), color = "blue", linewidth = 1.5) +
labs(color = "Gender")
# create bmi variables
df$bmi = df$weight / (df$height/100)^2
df$bmi_cat[(df$bmi >= 18.5) & (df$bmi < 25)] = "Normal weight"
df$bmi_cat[(df$bmi >= 25) & (df$bmi < 30)] = "Overweight"
# run continuous model
model6 = lm(tc ~ bmi, df)
# summarise model
tidy(model6, conf.int = TRUE)
tidy(model6, conf.int = TRUE)
# run categorical model
model7 = lm(tc ~ bmi_cat, df)
tidy(model7, conf.int = TRUE)
df$bmi_cat
df$bmi
df$bmi = df$weight / (df$height/100)^2
df$bmi_cat[df$bmi < 18.5] = "Underweight"
df$bmi_cat[(df$bmi >= 18.5) & (df$bmi < 25)] = "Normal weight"
df$bmi_cat[(df$bmi >= 25) & (df$bmi < 30)] = "Overweight"
# run continuous model
model6 = lm(tc ~ bmi, df)
# summarise model
tidy(model6, conf.int = TRUE)
View(df %>% select(matches("bmi")))
# create bmi variables
df$bmi = df$weight / (df$height/100)^2
df$bmi_cat[(df$bmi >= 25) & (df$bmi < 30)] = "Overweight"
# summarise model
tidy(model6, conf.int = TRUE)
# summarise model
tidy(model6, conf.int = TRUE)
t
# run categorical model
model7 = lm(tc ~ bmi_cat, df)
# summarise model
tidy(model7, conf.int = TRUE)
tidy(model7, conf.int = TRUE)
# import packages
library(tidyverse)
library(broom)
library(lme4)
library(lmerTest)
# import data
df = read_csv("SCCS2_v12.csv")[,-1]
females = df %>% filter(gender == 1)
males = df %>% filter(gender == 0)
# run model
model1 = lm(tc ~ age*10, df)
# run model
model1 = lm(tc ~ I(age*10), df)
# summarise model
tidy(model1, conf.int = TRUE)
# import packages
library(tidyverse)
library(broom)
library(lme4)
library(lmerTest)
# import data
df = read_csv("SCCS2_v12.csv")[,-1]
males = df %>% filter(gender == 0)
# run model
model1 = lm(tc ~ I(age/10), df)
# summarise model
tidy(model1, conf.int = TRUE)
knitr::purl(input = "hw1_2.qmd", output = "hw1_2_code.R",documentation = 0)
